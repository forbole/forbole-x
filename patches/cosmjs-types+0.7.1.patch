diff --git a/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js b/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
index 1607fcf..bd30bf8 100644
--- a/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
+++ b/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
@@ -26,6 +26,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.Params = exports.ModuleAccount = exports.BaseAccount = exports.protobufPackage = void 0;
 /* eslint-disable */
 const any_1 = require("../../../google/protobuf/any");
+const timestamp_1 = require("../../../google/protobuf/timestamp");
 const helpers_1 = require("../../../helpers");
 const _m0 = __importStar(require("protobufjs/minimal"));
 exports.protobufPackage = "cosmos.auth.v1beta1";
@@ -298,4 +299,75 @@ exports.Params = {
         return message;
     },
 };
+
+// Desmos Profile
+
+function fromTimestamp(t) {
+    let millis = t.seconds * 1_000
+    millis += t.nanos / 1_000_000
+    return new Date(millis)
+}
+
+const Pictures = {
+    decode(input, length) {
+        const basePictures = { profile: '', cover: '' }
+        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
+        let end = length === undefined ? reader.len : reader.pos + length
+        const message = { ...basePictures }
+        while (reader.pos < end) {
+            const tag = reader.uint32()
+            switch (tag >>> 3) {
+                case 1:
+                    message.profile = reader.string()
+                    break
+                case 2:
+                    message.cover = reader.string()
+                    break
+                default:
+                    reader.skipType(tag & 7)
+                    break
+            }
+        }
+        return message
+    },
+}
+
+exports.ProfileAccount = {
+    decode(input, length) {
+        const baseProfile = { dtag: '', nickname: '', bio: '' }
+        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
+        let end = length === undefined ? reader.len : reader.pos + length
+        const message = { ...baseProfile }
+        while (reader.pos < end) {
+            const tag = reader.uint32()
+            switch (tag >>> 3) {
+                case 1:
+                    message.account = any_1.Any.decode(reader, reader.uint32())
+                    break
+                case 2:
+                    message.dtag = reader.string()
+                    break
+                case 3:
+                    message.nickname = reader.string()
+                    break
+                case 4:
+                    message.bio = reader.string()
+                    break
+                case 5:
+                    message.pictures = Pictures.decode(reader, reader.uint32())
+                    break
+                case 6:
+                    message.creationDate = fromTimestamp(
+                      timestamp_1.Timestamp.decode(reader, reader.uint32())
+                    )
+                    break
+                default:
+                    reader.skipType(tag & 7)
+                    break
+            }
+        }
+        return message
+    },
+};
+
 //# sourceMappingURL=auth.js.map
